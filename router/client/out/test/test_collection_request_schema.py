# coding: utf-8

"""
    Gandi API

    API for Gandi Cloud vector database service

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.collection_request_schema import CollectionRequestSchema

class TestCollectionRequestSchema(unittest.TestCase):
    """CollectionRequestSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionRequestSchema:
        """Test CollectionRequestSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionRequestSchema`
        """
        model = CollectionRequestSchema()
        if include_optional:
            return CollectionRequestSchema(
                auto_id = '',
                enable_dynamic_field = '',
                fields = [
                    openapi_client.models.collection_request_schema_fields_inner.CollectionRequest_schema_fields_inner(
                        field_name = '', 
                        data_type = '', 
                        element_data_type = '', 
                        is_primary = True, 
                        is_partition_key = True, 
                        element_type_params = openapi_client.models.collection_request_schema_fields_inner_element_type_params.CollectionRequest_schema_fields_inner_elementTypeParams(
                            max_length = 56, 
                            dim = 56, 
                            max_capacity = 56, ), )
                    ]
            )
        else:
            return CollectionRequestSchema(
        )
        """

    def testCollectionRequestSchema(self):
        """Test CollectionRequestSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
