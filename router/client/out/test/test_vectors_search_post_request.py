# coding: utf-8

"""
    Gandi API

    API for Gandi Cloud vector database service

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vectors_search_post_request import VectorsSearchPostRequest

class TestVectorsSearchPostRequest(unittest.TestCase):
    """VectorsSearchPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VectorsSearchPostRequest:
        """Test VectorsSearchPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VectorsSearchPostRequest`
        """
        model = VectorsSearchPostRequest()
        if include_optional:
            return VectorsSearchPostRequest(
                db_name = '',
                collection_name = '',
                partition_names = [
                    ''
                    ],
                output_fields = [
                    ''
                    ],
                anss_field = '',
                limit = 56,
                offset = 56,
                filter = '',
                grouping_field = '',
                search_params = openapi_client.models._vectors_search_post_request_search_params._vectors_search_post_request_searchParams(
                    metric_type = '', 
                    params = openapi_client.models._vectors_search_post_request_search_params_params._vectors_search_post_request_searchParams_params(
                        radius = 56, 
                        range_filter = 56, ), )
            )
        else:
            return VectorsSearchPostRequest(
                collection_name = '',
        )
        """

    def testVectorsSearchPostRequest(self):
        """Test VectorsSearchPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
