// This file was generated by liblab | https://liblab.com/

package vectors

import (
	"github.com/swagger-api/swagger-petstore/internal/marshal"
	"github.com/swagger-api/swagger-petstore/internal/unmarshal"
)

type VectorsGetRequest struct {
	DbName         *string  `json:"dbName,omitempty"`
	CollectionName *string  `json:"collectionName,omitempty" required:"true"`
	Id             *Id      `json:"id,omitempty"`
	PartitionNames []string `json:"partitionNames,omitempty"`
	OutputFields   []string `json:"outputFields,omitempty"`
}

func (c *VectorsGetRequest) SetDbName(dbName string) {
	c.DbName = &dbName
}

func (c *VectorsGetRequest) GetDbName() *string {
	if c == nil {
		return nil
	}
	return c.DbName
}

func (c *VectorsGetRequest) SetCollectionName(collectionName string) {
	c.CollectionName = &collectionName
}

func (c *VectorsGetRequest) GetCollectionName() *string {
	if c == nil {
		return nil
	}
	return c.CollectionName
}

func (c *VectorsGetRequest) SetId(id Id) {
	c.Id = &id
}

func (c *VectorsGetRequest) GetId() *Id {
	if c == nil {
		return nil
	}
	return c.Id
}

func (c *VectorsGetRequest) SetPartitionNames(partitionNames []string) {
	c.PartitionNames = partitionNames
}

func (c *VectorsGetRequest) GetPartitionNames() []string {
	if c == nil {
		return nil
	}
	return c.PartitionNames
}

func (c *VectorsGetRequest) SetOutputFields(outputFields []string) {
	c.OutputFields = outputFields
}

func (c *VectorsGetRequest) GetOutputFields() []string {
	if c == nil {
		return nil
	}
	return c.OutputFields
}

type Id struct {
	StringValue       *string
	StringArrayValue  []string
	IntegerValue      *int64
	IntegerArrayValue []int64
}

func (i *Id) SetStringValue(stringValue string) {
	i.StringValue = &stringValue
}

func (i *Id) GetStringValue() *string {
	if i == nil {
		return nil
	}
	return i.StringValue
}

func (i *Id) SetStringArrayValue(stringArrayValue []string) {
	i.StringArrayValue = stringArrayValue
}

func (i *Id) GetStringArrayValue() []string {
	if i == nil {
		return nil
	}
	return i.StringArrayValue
}

func (i *Id) SetIntegerValue(integerValue int64) {
	i.IntegerValue = &integerValue
}

func (i *Id) GetIntegerValue() *int64 {
	if i == nil {
		return nil
	}
	return i.IntegerValue
}

func (i *Id) SetIntegerArrayValue(integerArrayValue []int64) {
	i.IntegerArrayValue = integerArrayValue
}

func (i *Id) GetIntegerArrayValue() []int64 {
	if i == nil {
		return nil
	}
	return i.IntegerArrayValue
}

func (i Id) MarshalJSON() ([]byte, error) {
	return marshal.FromComplexObject(i)
}

func (i *Id) UnmarshalJSON(data []byte) error {
	return unmarshal.ToComplexObject[Id](data, i)
}
