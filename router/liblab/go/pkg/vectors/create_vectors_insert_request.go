// This file was generated by liblab | https://liblab.com/

package vectors

import (
	"github.com/swagger-api/swagger-petstore/internal/marshal"
	"github.com/swagger-api/swagger-petstore/internal/unmarshal"
	"github.com/swagger-api/swagger-petstore/internal/utils"
)

type VectorsInsertRequest struct {
	DbName         *string                              `json:"dbName,omitempty"`
	CollectionName *string                              `json:"collectionName,omitempty" required:"true"`
	PartitionName  *string                              `json:"partitionName,omitempty"`
	Data           map[string]*VectorsInsertRequestData `json:"data,omitempty"`
}

func (c *VectorsInsertRequest) SetDbName(dbName string) {
	c.DbName = &dbName
}

func (c *VectorsInsertRequest) GetDbName() *string {
	if c == nil {
		return nil
	}
	return c.DbName
}

func (c *VectorsInsertRequest) SetCollectionName(collectionName string) {
	c.CollectionName = &collectionName
}

func (c *VectorsInsertRequest) GetCollectionName() *string {
	if c == nil {
		return nil
	}
	return c.CollectionName
}

func (c *VectorsInsertRequest) SetPartitionName(partitionName string) {
	c.PartitionName = &partitionName
}

func (c *VectorsInsertRequest) GetPartitionName() *string {
	if c == nil {
		return nil
	}
	return c.PartitionName
}

func (c *VectorsInsertRequest) SetData(data map[string]*VectorsInsertRequestData) {
	c.Data = utils.CloneMap(data)
}

func (c *VectorsInsertRequest) GetData() map[string]*VectorsInsertRequestData {
	if c == nil {
		return nil
	}
	return c.Data
}

type VectorsInsertRequestData struct {
	StringValue       *string
	IntegerValue      *int64
	NumberValue       *float64
	BooleanValue      *bool
	StringArrayValue  []string
	IntegerArrayValue []int64
	NumberArrayValue  []float64
	BooleanArrayValue []bool
}

func (c *VectorsInsertRequestData) SetStringValue(stringValue string) {
	c.StringValue = &stringValue
}

func (c *VectorsInsertRequestData) GetStringValue() *string {
	if c == nil {
		return nil
	}
	return c.StringValue
}

func (c *VectorsInsertRequestData) SetIntegerValue(integerValue int64) {
	c.IntegerValue = &integerValue
}

func (c *VectorsInsertRequestData) GetIntegerValue() *int64 {
	if c == nil {
		return nil
	}
	return c.IntegerValue
}

func (c *VectorsInsertRequestData) SetNumberValue(numberValue float64) {
	c.NumberValue = &numberValue
}

func (c *VectorsInsertRequestData) GetNumberValue() *float64 {
	if c == nil {
		return nil
	}
	return c.NumberValue
}

func (c *VectorsInsertRequestData) SetBooleanValue(booleanValue bool) {
	c.BooleanValue = &booleanValue
}

func (c *VectorsInsertRequestData) GetBooleanValue() *bool {
	if c == nil {
		return nil
	}
	return c.BooleanValue
}

func (c *VectorsInsertRequestData) SetStringArrayValue(stringArrayValue []string) {
	c.StringArrayValue = stringArrayValue
}

func (c *VectorsInsertRequestData) GetStringArrayValue() []string {
	if c == nil {
		return nil
	}
	return c.StringArrayValue
}

func (c *VectorsInsertRequestData) SetIntegerArrayValue(integerArrayValue []int64) {
	c.IntegerArrayValue = integerArrayValue
}

func (c *VectorsInsertRequestData) GetIntegerArrayValue() []int64 {
	if c == nil {
		return nil
	}
	return c.IntegerArrayValue
}

func (c *VectorsInsertRequestData) SetNumberArrayValue(numberArrayValue []float64) {
	c.NumberArrayValue = numberArrayValue
}

func (c *VectorsInsertRequestData) GetNumberArrayValue() []float64 {
	if c == nil {
		return nil
	}
	return c.NumberArrayValue
}

func (c *VectorsInsertRequestData) SetBooleanArrayValue(booleanArrayValue []bool) {
	c.BooleanArrayValue = booleanArrayValue
}

func (c *VectorsInsertRequestData) GetBooleanArrayValue() []bool {
	if c == nil {
		return nil
	}
	return c.BooleanArrayValue
}

func (c VectorsInsertRequestData) MarshalJSON() ([]byte, error) {
	return marshal.FromComplexObject(c)
}

func (c *VectorsInsertRequestData) UnmarshalJSON(data []byte) error {
	return unmarshal.ToComplexObject[VectorsInsertRequestData](data, c)
}
