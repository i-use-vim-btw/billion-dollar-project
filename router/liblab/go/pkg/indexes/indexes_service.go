// This file was generated by liblab | https://liblab.com/

package indexes

import (
	"context"

	restClient "github.com/swagger-api/swagger-petstore/internal/clients/rest"
	"github.com/swagger-api/swagger-petstore/internal/clients/rest/httptransport"
	"github.com/swagger-api/swagger-petstore/internal/configmanager"
	"github.com/swagger-api/swagger-petstore/pkg/gandiconfig"
	"github.com/swagger-api/swagger-petstore/pkg/shared"
)

type IndexesService struct {
	manager *configmanager.ConfigManager
}

func NewIndexesService(manager *configmanager.ConfigManager) *IndexesService {
	return &IndexesService{
		manager: manager,
	}
}

func (api *IndexesService) getConfig() *gandiconfig.Config {
	return api.manager.GetIndexes()
}

func (api *IndexesService) SetBaseUrl(baseUrl string) {
	config := api.getConfig()
	config.SetBaseUrl(baseUrl)
}

func (api *IndexesService) SetAccessToken(accessToken string) {
	config := api.getConfig()
	config.SetAccessToken(accessToken)
}

// This creates a named index for a target field, which can either be a vector field or a scalar field.
func (api *IndexesService) IndexCreate(ctx context.Context, indexRequest IndexRequest) (*shared.GandiResponse[any], *shared.GandiError) {
	config := *api.getConfig()

	client := restClient.NewRestClient[any](config)

	request := httptransport.NewRequest(ctx, "POST", "/indexes/create", config)

	request.Body = indexRequest

	resp, err := client.Call(request)
	if err != nil {
		return nil, shared.NewGandiError[any](err)
	}

	return shared.NewGandiResponse[any](resp), nil
}

// Returns the details of an index.
func (api *IndexesService) IndexDescribe(ctx context.Context, createIndexesDescribeRequest IndexDescribeRequest) (*shared.GandiResponse[any], *shared.GandiError) {
	config := *api.getConfig()

	client := restClient.NewRestClient[any](config)

	request := httptransport.NewRequest(ctx, "POST", "/indexes/describe", config)

	request.Body = createIndexesDescribeRequest

	resp, err := client.Call(request)
	if err != nil {
		return nil, shared.NewGandiError[any](err)
	}

	return shared.NewGandiResponse[any](resp), nil
}

// This operation drops index from a specified collection.
func (api *IndexesService) IndexDrop(ctx context.Context, createIndexesDropRequest IndexDropRequest) (*shared.GandiResponse[any], *shared.GandiError) {
	config := *api.getConfig()

	client := restClient.NewRestClient[any](config)

	request := httptransport.NewRequest(ctx, "POST", "/indexes/drop", config)

	request.Body = createIndexesDropRequest

	resp, err := client.Call(request)
	if err != nil {
		return nil, shared.NewGandiError[any](err)
	}

	return shared.NewGandiResponse[any](resp), nil
}

// Returns a list of all indexes in the specified collection.
func (api *IndexesService) IndexList(ctx context.Context, createIndexesListRequest IndexListRequest) (*shared.GandiResponse[any], *shared.GandiError) {
	config := *api.getConfig()

	client := restClient.NewRestClient[any](config)

	request := httptransport.NewRequest(ctx, "POST", "/indexes/list", config)

	request.Body = createIndexesListRequest

	resp, err := client.Call(request)
	if err != nil {
		return nil, shared.NewGandiError[any](err)
	}

	return shared.NewGandiResponse[any](resp), nil
}
