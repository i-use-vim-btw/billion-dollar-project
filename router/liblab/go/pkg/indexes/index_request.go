// This file was generated by liblab | https://liblab.com/

package indexes

type IndexRequest struct {
	DbName         *string                   `json:"dbName,omitempty"`
	CollectionName *string                   `json:"collectionName,omitempty" required:"true"`
	IndexConfig    []IndexParams `json:"indexParams,omitempty"`
}

func (i *IndexRequest) SetDbName(dbName string) {
	i.DbName = &dbName
}

func (i *IndexRequest) GetDbName() *string {
	if i == nil {
		return nil
	}
	return i.DbName
}

func (i *IndexRequest) SetCollectionName(collectionName string) {
	i.CollectionName = &collectionName
}

func (i *IndexRequest) GetCollectionName() *string {
	if i == nil {
		return nil
	}
	return i.CollectionName
}

func (i *IndexRequest) SetIndexParams(indexParams []IndexParams) {
	i.IndexConfig = indexParams
}

func (i *IndexRequest) GetIndexParams() []IndexParams {
	if i == nil {
		return nil
	}
	return i.IndexConfig
}

type IndexParams struct {
	MetricType *string             `json:"metricType,omitempty"`
	FieldName  *string             `json:"fieldName,omitempty"`
	IndexName  *string             `json:"indexName,omitempty"`
	Params     *IndexConfig `json:"params,omitempty"`
}

func (i *IndexParams) SetMetricType(metricType string) {
	i.MetricType = &metricType
}

func (i *IndexParams) GetMetricType() *string {
	if i == nil {
		return nil
	}
	return i.MetricType
}

func (i *IndexParams) SetFieldName(fieldName string) {
	i.FieldName = &fieldName
}

func (i *IndexParams) GetFieldName() *string {
	if i == nil {
		return nil
	}
	return i.FieldName
}

func (i *IndexParams) SetIndexName(indexName string) {
	i.IndexName = &indexName
}

func (i *IndexParams) GetIndexName() *string {
	if i == nil {
		return nil
	}
	return i.IndexName
}

func (i *IndexParams) SetParams(params IndexConfig) {
	i.Params = &params
}

func (i *IndexParams) GetParams() *IndexConfig {
	if i == nil {
		return nil
	}
	return i.Params
}

type IndexConfig struct {
	IndexType      *string `json:"index_type,omitempty"`
	M              *int64  `json:"M,omitempty"`
	EfConstruction *int64  `json:"efConstruction,omitempty"`
	Nlist          *int64  `json:"nlist,omitempty"`
}

func (i *IndexConfig) SetIndexType(indexType string) {
	i.IndexType = &indexType
}

func (i *IndexConfig) GetIndexType() *string {
	if i == nil {
		return nil
	}
	return i.IndexType
}

func (i *IndexConfig) SetM(m int64) {
	i.M = &m
}

func (i *IndexConfig) GetM() *int64 {
	if i == nil {
		return nil
	}
	return i.M
}

func (i *IndexConfig) SetEfConstruction(efConstruction int64) {
	i.EfConstruction = &efConstruction
}

func (i *IndexConfig) GetEfConstruction() *int64 {
	if i == nil {
		return nil
	}
	return i.EfConstruction
}

func (i *IndexConfig) SetNlist(nlist int64) {
	i.Nlist = &nlist
}

func (i *IndexConfig) GetNlist() *int64 {
	if i == nil {
		return nil
	}
	return i.Nlist
}
