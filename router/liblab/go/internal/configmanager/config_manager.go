// This file was generated by liblab | https://liblab.com/

package configmanager

import "github.com/swagger-api/swagger-petstore/pkg/gandiconfig"

type ConfigManager struct {
	Collections gandiconfig.Config
	Indexes     gandiconfig.Config
	Vectors     gandiconfig.Config
}

func NewConfigManager(config gandiconfig.Config) *ConfigManager {
	return &ConfigManager{
		Collections: config,
		Indexes:     config,
		Vectors:     config,
	}
}

func (c *ConfigManager) SetBaseUrl(baseUrl string) {
	c.Collections.SetBaseUrl(baseUrl)
	c.Indexes.SetBaseUrl(baseUrl)
	c.Vectors.SetBaseUrl(baseUrl)
}

func (c *ConfigManager) SetAccessToken(accessToken string) {
	c.Collections.SetAccessToken(accessToken)
	c.Indexes.SetAccessToken(accessToken)
	c.Vectors.SetAccessToken(accessToken)
}

func (c *ConfigManager) UpdateAccessToken(originalValue string, newValue string) {

	if c.Collections.AccessToken != nil && *c.Collections.AccessToken == originalValue {
		c.Collections.SetAccessToken(newValue)
	}

	if c.Indexes.AccessToken != nil && *c.Indexes.AccessToken == originalValue {
		c.Indexes.SetAccessToken(newValue)
	}

	if c.Vectors.AccessToken != nil && *c.Vectors.AccessToken == originalValue {
		c.Vectors.SetAccessToken(newValue)
	}
}

func (c *ConfigManager) GetCollections() *gandiconfig.Config {
	return &c.Collections
}
func (c *ConfigManager) GetIndexes() *gandiconfig.Config {
	return &c.Indexes
}
func (c *ConfigManager) GetVectors() *gandiconfig.Config {
	return &c.Vectors
}
